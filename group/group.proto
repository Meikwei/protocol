// Copyright © 2023 aetim. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";
package aetim.group;
import "sdkws/sdkws.proto";
import "wrapperspb/wrapperspb.proto";
option go_package = "github.com/Meikwei/protocol/group";



// 创建群组请求参数
message CreateGroupReq{
  repeated string memberUserIDs = 1; // 成员用户ID列表
  aetim.sdkws.GroupInfo groupInfo = 2; // 群组信息
  repeated string adminUserIDs = 3; // 管理员用户ID列表
  string ownerUserID = 4; // 群主用户ID
}

// 创建群组响应结果
message CreateGroupResp{
  aetim.sdkws.GroupInfo groupInfo = 1; // 创建的群组信息
}

// 获取群组信息请求参数
message GetGroupsInfoReq{
  repeated string groupIDs = 1; // 需要获取信息的群组ID列表
}

// 获取群组信息响应结果
message GetGroupsInfoResp{
  repeated aetim.sdkws.GroupInfo groupInfos = 1; // 获取到的群组信息列表
}

// 设置群组信息请求参数
message SetGroupInfoReq{
  aetim.sdkws.GroupInfoForSet groupInfoForSet = 1; // 需要设置的群组信息
}

// 设置群组信息响应结果
message SetGroupInfoResp{
}

// 获取群组申请列表请求参数
message GetGroupApplicationListReq {
  aetim.sdkws.RequestPagination pagination = 1; // 分页参数
  string fromUserID = 2; // 请求用户ID，群主或管理员
}

// 获取群组申请列表响应结果
message GetGroupApplicationListResp {
  uint32 total = 1; // 总数
  repeated aetim.sdkws.GroupRequest groupRequests = 2; // 群组申请列表
}

// 获取用户申请加入群组列表请求参数
message GetUserReqApplicationListReq{
  aetim.sdkws.RequestPagination pagination = 1; // 分页参数
  string userID = 2; // 用户ID
}

// 获取用户申请加入群组列表响应结果
message GetUserReqApplicationListResp{
  uint32 total = 1; // 总数
  repeated aetim.sdkws.GroupRequest groupRequests = 2; // 群组申请列表
}

// 转让群组所有权请求参数
message TransferGroupOwnerReq {
  string groupID = 1; // 群组ID
  string oldOwnerUserID = 2; // 原群主用户ID
  string newOwnerUserID = 3; // 新群主用户ID
}

// 转让群组所有权响应结果
message TransferGroupOwnerResp{

}

// 加入群组请求参数
message JoinGroupReq{
  string groupID = 1; // 群组ID
  string reqMessage = 2; // 加入申请信息
  int32 joinSource = 3; // 加入来源
  string inviterUserID = 4; // 邀请者用户ID
  string ex = 5; // 扩展信息
}

// 加入群组响应结果
message JoinGroupResp{
}

// 处理群组申请请求参数
message GroupApplicationResponseReq{
  string groupID = 1; // 群组ID
  string fromUserID = 2; // 申请人用户ID
  string handledMsg = 3; // 处理信息
  int32 handleResult = 4; // 处理结果
}

// 处理群组申请响应结果
message GroupApplicationResponseResp{

}

// 退出群组请求参数
message QuitGroupReq{
  string groupID = 1; // 群组ID
  string userID = 2; // 用户ID
}

// 退出群组响应结果
message QuitGroupResp{
}

// 获取群组成员列表请求参数
message GetGroupMemberListReq {
  aetim.sdkws.RequestPagination pagination = 1; // 分页参数
  string groupID = 2; // 群组ID
  int32 filter = 3; // 过滤条件
  string keyword = 4; // 关键词
}

// 获取群组成员列表响应结果
message GetGroupMemberListResp {
  uint32 total = 1; // 总数
  repeated aetim.sdkws.GroupMemberFullInfo members = 2; // 群组成员列表
}

// 获取群组成员信息请求参数
message GetGroupMembersInfoReq {
  string groupID = 1; // 群组ID
  repeated string userIDs = 2; // 需要获取信息的用户ID列表
}

// 获取群组成员信息响应结果
message GetGroupMembersInfoResp {
  repeated aetim.sdkws.GroupMemberFullInfo members = 1; // 获取到的群组成员信息列表
}

// 请求踢出群成员
message KickGroupMemberReq {
  string groupID = 1; // 群ID
  repeated string kickedUserIDs = 2; // 被踢成员ID列表
  string reason = 3; // 踢出原因
}

// 踢出群成员响应
message KickGroupMemberResp {
}

// 获取已加入的群列表请求
message GetJoinedGroupListReq {
  aetim.sdkws.RequestPagination pagination = 1; // 分页参数
  string fromUserID = 2; // 请求用户的ID
}

// 获取已加入的群列表响应
message GetJoinedGroupListResp{
  uint32 total = 1; // 总数
  repeated  aetim.sdkws.GroupInfo groups = 2; // 群信息列表
}

// 邀请用户加入群请求
message InviteUserToGroupReq {
  string groupID = 1; // 群ID
  string reason = 2; // 邀请原因
  repeated string invitedUserIDs = 3; // 被邀请用户ID列表
}
// 邀请用户加入群响应
message InviteUserToGroupResp {
}

// 获取群全部成员请求
message GetGroupAllMemberReq {
  aetim.sdkws.RequestPagination pagination = 1; // 分页参数
  string groupID = 2; // 群ID
}
// 获取群全部成员响应
message GetGroupAllMemberResp {
  repeated aetim.sdkws.GroupMemberFullInfo members = 1; // 群成员信息列表
}

// 内容管理系统（CMS）群组信息
message CMSGroup {
  aetim.sdkws.GroupInfo groupInfo = 1; // 群组基本信息
  string groupOwnerUserName = 2; // 群主用户名
  string groupOwnerUserID = 3; // 群主用户ID
}

// 获取群组列表请求
message GetGroupsReq {
  aetim.sdkws.RequestPagination pagination = 1; // 分页参数
  string groupName = 2; // 群组名称
  string groupID = 3; // 群组ID
}

// 获取群组列表响应
message GetGroupsResp {
  uint32 total = 1; // 总数
  repeated CMSGroup groups = 2; // 群组列表
}

// 获取群成员请求
message GetGroupMemberReq {
  string groupID = 1; // 群ID
}

// 获取特定用户在多个群中的成员信息请求
message GetGroupMembersCMSReq {
  aetim.sdkws.RequestPagination pagination = 1; // 分页参数
  string groupID = 2; // 群ID
  string userName = 3; // 用户名
}

// 获取特定用户在多个群中的成员信息响应
message GetGroupMembersCMSResp {
  uint32 total = 1; // 总数
  repeated aetim.sdkws.GroupMemberFullInfo members = 2; // 成员信息列表
}

// 解散群请求
message DismissGroupReq{
  string groupID = 1; // 群ID
  bool deleteMember = 2; // 是否删除成员
}

// 解散群响应
message DismissGroupResp{
}

// 全员禁言请求
message MuteGroupMemberReq{
  string groupID = 1; // 群ID
  string userID = 2; // 用户ID
  uint32 mutedSeconds = 3; // 禁言时长（秒）
}

// 全员禁言响应
message MuteGroupMemberResp{
}

// 取消禁言请求
message CancelMuteGroupMemberReq{
  string groupID = 1; // 群ID
  string userID = 2; // 用户ID
}

// 取消禁言响应
message CancelMuteGroupMemberResp{
}

// 禁言群请求
message MuteGroupReq{
  string groupID = 1; // 群ID
}

// 禁言群响应
message MuteGroupResp{
}

// 取消禁言群请求
message CancelMuteGroupReq{
  string groupID = 1; // 群ID
}

// 取消禁言群响应
message CancelMuteGroupResp{
}

// 设置群成员信息请求
message SetGroupMemberInfo{
  string groupID = 1; // 群ID
  string userID = 2; // 用户ID
  aetim.protobuf.StringValue nickname = 3; // 昵称
  aetim.protobuf.StringValue faceURL = 4; // 头像URL
  aetim.protobuf.Int32Value roleLevel = 5; // 角色等级
  aetim.protobuf.StringValue ex = 6; // 扩展信息
}

// 设置群成员信息请求
message SetGroupMemberInfoReq{
  repeated SetGroupMemberInfo members = 1; // 群成员信息列表
}

// 设置群成员信息响应
message SetGroupMemberInfoResp{

}

// 获取群摘要信息请求
message GetGroupAbstractInfoReq{
  repeated string groupIDs = 1; // 群ID列表
}

// 群摘要信息
message GroupAbstractInfo{
  string groupID = 1; // 群ID
  uint32 groupMemberNumber = 2; // 群成员数量
  uint64 groupMemberListHash = 3; // 群成员列表哈希值
}

// 获取群摘要信息响应
message GetGroupAbstractInfoResp{
  repeated GroupAbstractInfo groupAbstractInfos = 1; // 群摘要信息列表
}

// 获取用户在群中的成员信息请求
message GetUserInGroupMembersReq {
  string userID = 1; // 用户ID
  repeated string groupIDs = 2; // 群ID列表
}

// 获取用户在群中的成员信息响应
message GetUserInGroupMembersResp{
  repeated aetim.sdkws.GroupMemberFullInfo members = 1; // 成员信息列表
}

// 获取群成员用户ID列表请求
message GetGroupMemberUserIDsReq{
  string groupID = 1; // 群ID
}

// 获取群成员用户ID列表响应
message GetGroupMemberUserIDsResp{
  repeated string userIDs = 1; // 用户ID列表
}

// 获取群成员角色等级请求
message GetGroupMemberRoleLevelReq{
  string groupID = 1; // 群ID
  repeated int32 roleLevels = 2; // 角色等级列表
}

// 获取群成员角色等级响应
message GetGroupMemberRoleLevelResp {
  repeated aetim.sdkws.GroupMemberFullInfo members = 1; // 成员信息列表
}

// 获取群信息缓存请求
message GetGroupInfoCacheReq {
  string groupID = 1; // 群ID
}

// 获取群信息缓存响应
message GetGroupInfoCacheResp {
  aetim.sdkws.GroupInfo groupInfo = 1; // 群信息
}

// 获取群成员缓存请求
message GetGroupMemberCacheReq {
  string groupID = 1; // 群ID
  string groupMemberID = 2; // 群成员ID
}

// 获取群成员缓存响应
message GetGroupMemberCacheResp {
  aetim.sdkws.GroupMemberFullInfo member = 1; // 群成员信息
}

// 群创建数量统计请求
message GroupCreateCountReq {
  int64 start = 1; // 开始时间
  int64 end = 2; // 结束时间
}

// 群创建数量统计响应
message GroupCreateCountResp {
  int64 total = 1; // 总创建数
  int64 before = 2; // 之前创建数
  map<string, int64> count = 3; // 每日创建数
}

// 获取用户加入申请列表请求
message getGroupUsersReqApplicationListReq {
  string groupID = 1; // 群ID
  repeated string userIDs = 2; // 用户ID列表
}

// 获取用户加入申请列表响应
message getGroupUsersReqApplicationListResp {
  int64 total = 1; // 总数
  repeated aetim.sdkws.GroupRequest groupRequests = 2; // 加入申请列表
}

// 用户信息更新通知请求
message notificationUserInfoUpdateReq {
  string userID = 1; // 用户ID
  aetim.sdkws.UserInfo oldUserInfo = 2; // 旧的用户信息
  aetim.sdkws.UserInfo newUserInfo = 3; // 新的用户信息
}

// 用户信息更新通知响应
message notificationUserInfoUpdateResp {
}

service group{
  //创建群
  rpc createGroup(CreateGroupReq) returns(CreateGroupResp);
  //申请加群
  rpc joinGroup(JoinGroupReq) returns(JoinGroupResp);
  //退出群
  rpc quitGroup(QuitGroupReq) returns(QuitGroupResp);
  //获取指定群信息
  rpc getGroupsInfo(GetGroupsInfoReq) returns(GetGroupsInfoResp);
  //设置群信息
  rpc setGroupInfo(SetGroupInfoReq) returns(SetGroupInfoResp);
  //（以管理员或群主身份）获取群的加群申请
  rpc getGroupApplicationList(GetGroupApplicationListReq) returns(GetGroupApplicationListResp);
  //获取用户自己的主动加群申请
  rpc getUserReqApplicationList(GetUserReqApplicationListReq) returns(GetUserReqApplicationListResp);
  // 获取该群用户的加群申请
  rpc getGroupUsersReqApplicationList(getGroupUsersReqApplicationListReq) returns(getGroupUsersReqApplicationListResp);
  //转让群主
  rpc transferGroupOwner(TransferGroupOwnerReq) returns(TransferGroupOwnerResp);
  //群主或管理员处理进群申请
  rpc groupApplicationResponse(GroupApplicationResponseReq) returns(GroupApplicationResponseResp);
  //获取某个群的群成员
  rpc getGroupMemberList(GetGroupMemberListReq) returns(GetGroupMemberListResp);
  //获取某个群的指定群成员
  rpc getGroupMembersInfo(GetGroupMembersInfoReq) returns(GetGroupMembersInfoResp);
  //踢出群
  rpc kickGroupMember(KickGroupMemberReq) returns (KickGroupMemberResp);
  //获取某个人已加入群
  rpc getJoinedGroupList(GetJoinedGroupListReq) returns (GetJoinedGroupListResp);
  //邀请某些人进群
  rpc inviteUserToGroup(InviteUserToGroupReq) returns (InviteUserToGroupResp);

  rpc getGroups(GetGroupsReq) returns(GetGroupsResp);
  rpc getGroupMembersCMS(GetGroupMembersCMSReq) returns(GetGroupMembersCMSResp);

  //解散群
  rpc dismissGroup(DismissGroupReq) returns(DismissGroupResp);
  //对某个群成员禁言
  rpc muteGroupMember(MuteGroupMemberReq) returns(MuteGroupMemberResp);
  //对某个群成员取消禁言
  rpc cancelMuteGroupMember(CancelMuteGroupMemberReq) returns(CancelMuteGroupMemberResp);
  //对某个群禁言
  rpc muteGroup(MuteGroupReq) returns(MuteGroupResp);
  //对某个群取消禁言
  rpc cancelMuteGroup(CancelMuteGroupReq) returns(CancelMuteGroupResp);

  //设置群成员信息
  rpc setGroupMemberInfo(SetGroupMemberInfoReq) returns (SetGroupMemberInfoResp);
  //获取群信息hash值
  rpc getGroupAbstractInfo(GetGroupAbstractInfoReq) returns (GetGroupAbstractInfoResp);
  //获取某个用户在指定群中的信息
  rpc getUserInGroupMembers(GetUserInGroupMembersReq) returns (GetUserInGroupMembersResp);
  //获取群成员用户ID
  rpc getGroupMemberUserIDs(GetGroupMemberUserIDsReq) returns (GetGroupMemberUserIDsResp);
  //查询群组中对应级别的成员
  rpc GetGroupMemberRoleLevel(GetGroupMemberRoleLevelReq)returns (GetGroupMemberRoleLevelResp);

  rpc GetGroupInfoCache(GetGroupInfoCacheReq) returns (GetGroupInfoCacheResp);
  rpc GetGroupMemberCache(GetGroupMemberCacheReq) returns (GetGroupMemberCacheResp);

  rpc GroupCreateCount(GroupCreateCountReq) returns (GroupCreateCountResp);

  rpc NotificationUserInfoUpdate(notificationUserInfoUpdateReq)returns(notificationUserInfoUpdateResp);

}